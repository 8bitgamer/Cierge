@model EditUserInfoViewModel
@{
    ViewData["Title"] = "Profile";
}

<div class="row">
    <div class="column">
        <h3>My profile</h3>
    </div>
</div>

<div class="row">
    <div class="column">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>

            <label asp-for="UserName"></label>
            <input asp-for="UserName" class="form-control" />            

            <label asp-for="CommunicationEmail"></label>
            @if (Model.Logins?.FirstOrDefault(l => l.LoginProvider == "Email") != null)
            {
                <select asp-for="CommunicationEmail" asp-items=@Model.Logins.Where(l => l.LoginProvider == "Email").Select(l => new SelectListItem() { Text = l.ProviderKey.ToLower(), Value = l.ProviderKey, Selected = Model.CommunicationEmail.ToLower() == l.ProviderKey.ToLower() }) ></select>
            }
            else
            {
                <input asp-for="CommunicationEmail" type="hidden" value="@Model.CommunicationEmail" />
                <em>@Model.CommunicationEmail?.ToLower()</em>
                <a asp-controller="Account" asp-action="Login" class="button button-clear">
                    Change by adding another email
                </a>
            }


            <label asp-for="FavColor"></label>
            <input asp-for="FavColor" class="form-control" />

            <button type="submit" class="button">
                <i class="fa fa-hdd-o" aria-hidden="true"></i>&nbsp;
                Save
            </button>
        </form>
    </div>
</div>


@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
