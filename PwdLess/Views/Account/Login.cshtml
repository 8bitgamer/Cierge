@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using PwdLess.Controllers
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}


<div class="row">
    <h3 class="column">
        @if (SignInManager.IsSignedIn(User))
        {
            <span>Add another login method</span>
            <a asp-controller="Manage" asp-action="Logins" class="button button-clear float-right">
                <i class="fa fa-address-book-o" aria-hidden="true"></i>&nbsp;
                Manage existing
            </a>
        }
        else
        {
            <span>Login or signup</span>
        }
    </h3>
</div>

<div class="row">
    <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="column">
        <div asp-validation-summary="All" class="text-danger"></div>

        <label asp-for="Email"></label>
        <input asp-for="Email" />

        @if (!SignInManager.IsSignedIn(User))
        {
            <div class="float-right">
                <input asp-for="RememberMe" checked="@true" />
                <label asp-for="RememberMe" class="label-inline">@Html.DisplayNameFor(m => m.RememberMe)</label>
            </div>
        }

        <button class="button button-primary"
                type="submit">
            @if (SignInManager.IsSignedIn(User))
            {
            <span>
                <i class="fa fa-envelope-o" aria-hidden="true"></i>&nbsp;
                Add email
            </span>
            }
            else
            {
            <span>
                <i class="fa fa-sign-in" aria-hidden="true"></i>&nbsp;
                Login or signup
            </span>
            }
        </button>
    </form>
</div>



@{
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    if (loginProviders.Count == 0)
    {
    }
    else
    {
        <hr />
        <h4>Or an external login...</h4>

        <div class="row">
            <form asp-action="@nameof(AccountController.ExternalLoginAsync)" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="column">
                <div>
                    <p>
                        @foreach (var provider in loginProviders)
                        {
                        <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                            @switch (provider.DisplayName.ToLower())
                            {
                            case "google":
                                <span><i class="fa fa-google" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            case "twitter":
                                <span><i class="fa fa-twitter" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            case "facebook":
                                <span><i class="fa fa-facebook" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            case "microsoft":
                                <span><i class="fa fa-windows" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            case "github":
                                <span><i class="fa fa-github" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            default:
                                <span><i class="fa fa-id-badge" aria-hidden="true"></i>&nbsp;</span>
                                break;
                            }
                            @provider.Name
                        </button>
                        }
                    </p>
                </div>
            </form>
        </div>

    }
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
